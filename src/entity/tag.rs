//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "tag")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub tag: String,
    #[sea_orm(primary_key)]
    pub repo: String,
    pub manifest_digest: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::manifest::Entity",
        from = "Column::ManifestDigest",
        to = "super::manifest::Column::Digest",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Manifest,
    #[sea_orm(
        belongs_to = "super::repo::Entity",
        from = "Column::Repo",
        to = "super::repo::Column::Name",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Repo,
}

impl Related<super::manifest::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Manifest.def()
    }
}

impl Related<super::repo::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Repo.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
