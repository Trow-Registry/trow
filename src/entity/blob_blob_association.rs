//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;

use crate::registry::Digest;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "blob_blob_association")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub parent_digest: Digest,
    #[sea_orm(primary_key, auto_increment = false)]
    pub child_digest: Digest,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::blob::Entity",
        from = "Column::ChildDigest",
        to = "super::blob::Column::Digest",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Child,
    #[sea_orm(
        belongs_to = "super::blob::Entity",
        from = "Column::ParentDigest",
        to = "super::blob::Column::Digest",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Parent,
}

impl ActiveModelBehavior for ActiveModel {}
