//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use chrono::Utc;
use sea_orm::entity::prelude::*;
use sea_orm::ActiveValue::{NotSet, Set};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "blob_upload")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub uuid: Uuid,
    pub offset: i32,
    #[sea_orm(default_expr = "Expr::current_timestamp()")]
    pub last_accessed: chrono::DateTime<Utc>,
    pub repo: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::repo::Entity",
        from = "Column::Repo",
        to = "super::repo::Column::Name",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Repo,
}

impl Related<super::repo::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Repo.def()
    }
}

impl ActiveModelBehavior for ActiveModel {
    fn new() -> Self {
        Self {
            last_accessed: Set(Utc::now()),
            offset: Set(0),
            repo: NotSet,
            uuid: Set(Uuid::new_v4()),
        }
    }
}
