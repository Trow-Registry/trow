{{- if or .Values.trow.validationWebhook.enable .Values.trow.proxyRegistries.webhook.enable }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    {{- include "webhook.labels" . | nindent 4 }}
  name: {{ include "trow.fullname" . }}-webhook
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      {{- include "webhook.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "webhook.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
      - name: trow-webhook-cert-translate
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - sh
          - -c
          - |
            cp /etc/trow/webhook-cert-ecc/cert /etc/trow/webhook-cert && \
            openssl pkcs8 -topk8 -nocrypt -in /etc/trow/webhook-cert-ecc/key -out /etc/trow/webhook-cert/key
        volumeMounts:
        - name: webhook-cert-translated
          mountPath: /etc/trow/webhook-cert
        - name: webhook-cert-ecc
          mountPath: /etc/trow/webhook-cert-ecc
          readOnly: true
      containers:
      - name: trow-webhook
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
          - "--tls=/etc/trow/webhook-cert/cert,/etc/trow/webhook-cert/key"
          - "-n"
          - {{ .Values.trow.domain | quote }}
          {{- if (not (empty .Values.trow.proxyRegistries.config)) }}
          - "--proxy-registry-config-file=/etc/trow/proxy-registries.yaml"
          {{- end }}
          {{- if (not (empty .Values.trow.validationWebhook.config)) }}
          - "--image-validation-config-file=/etc/trow/validation.yaml"
          {{- end }}
        env:
        - name: RUST_LOG
          value: {{ .Values.trow.logLevel }}
        ports:
        - name: webhook
          containerPort: 8443
        volumeMounts:
        - name: webhook-cert-translated
          mountPath: /etc/trow/webhook-cert
          readOnly: true
      {{- if (not (empty .Values.trow.proxyRegistries.config)) }}
        - name: trow-proxy-cfg
          mountPath: /etc/trow/proxy-registries.yaml
          subPath: proxy-registries.yaml
          readOnly: true
      {{- end}}
      {{- if (not (empty .Values.trow.validationWebhook.config)) }}
        - name: trow-validation-cfg
          mountPath: /etc/trow/validation.yaml
          subPath: validation.yaml
          readOnly: true
      {{- end}}
      volumes:
        - name: webhook-cert-ecc
          secret:
            secretName: {{ include "trow.fullname" . }}-admission
        - name: webhook-cert-translated
          emptyDir: {}
      {{- if (not (empty .Values.trow.proxyRegistries.config)) }}
        - name: trow-proxy-cfg
          secret:
            secretName: {{ include "trow.fullname" . }}-proxy-cfg
      {{- end }}
      {{- if (not (empty .Values.trow.validationWebhook.config)) }}
        - name: trow-validation-cfg
          configMap:
            name: {{ include "trow.fullname" . }}-validation-cfg
      {{- end }}
      securityContext:
        runAsUser: 333333
        runAsGroup: 333333
        fsGroup: 333333
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
